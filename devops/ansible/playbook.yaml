- name: Provision groups
  hosts: all
  become: true 

  tasks:
    - name: Create 'sudo' group
      ansible.builtin.group:
        name: sudo
        state: present

    - name: Create 'docker' group
      ansible.builtin.group:
        name: docker
        state: present

- name: Provision users and SSH keys
  hosts: all
  become: yes 

  vars:
    users_to_provision:
      - name: tony
        github_key_url: "https://github.com/anthonyl6.keys"
      - name: momo
        github_key_url: "https://github.com/hackr-sh.keys"
      - name: jd
        github_key_url: "https://github.com/JD-D3V.keys"
      - name: tai
        github_key_url: "https://github.com/tai-shis.keys"

  tasks:
    - name: Ensure user accounts exist
      ansible.builtin.user:
        name: "{{ item.name }}"
        state: present
        create_home: yes
        groups: sudo,docker
        shell: /bin/bash # Or your preferred shell
        password: "12345"
      loop: "{{ users_to_provision }}"

    - name: Fetch and add SSH public keys from GitHub
      ansible.posix.authorized_key:
        user: "{{ item.name }}"
        state: present
        key: "{{ lookup('url', item.github_key_url, validate_certs=false, split_lines=true) }}"
        exclusive: false
      loop: "{{ users_to_provision }}"

    - name: Replace commas with newlines in authorized_keys
      ansible.builtin.replace:
        path: "/home/{{ item.name }}/.ssh/authorized_keys"
        regexp: ','
        replace: '\n'
        mode: '0600'
      loop: "{{ users_to_provision }}"
      when: item.name is defined

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes

    - name: Copy directory from local to remote
      ansible.builtin.copy:
        src: ../../backend
        dest: /var/api/backend

    - name: Bring up Docker Compose services
      community.docker.docker_compose_v2:
        project_src: /var/api/backend/
        state: present

    - name: Ensure PasswordAuthentication is set to no
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present

    - name: Ensure Pubkey Auth is set to yes
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PubkeyAuthentication'
        line: 'PubkeyAuthentication yes'
        state: present

    - name: Ensure Pubkey Auth is set to yes
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PubkeyAuthentication'
        line: 'PubkeyAuthentication yes'
        state: present

    - name: Ensure root login is set to no
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present

    - name: Reload sshd service
      ansible.builtin.systemd:
        name: sshd
        state: reloaded